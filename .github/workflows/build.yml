# This is a basic workflow to help you get started with Actions

name: build's actions 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:          
  feature-build-ros:
    name: feature-build test ros
    runs-on: ubuntu-20.04

    steps:      
      - name: Check-out repository
        uses: actions/checkout@v2
        with:
          ref: master
          #fetch-depth: 2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-       

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push                  
        uses: docker/build-push-action@v2        
        with:
          context: .
          file: ./Dockerfile/ros_build.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros1-neotic:carto_build
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          
  # featureB-deploy-ros:
  #   name: featureB deploy ros
  #   runs-on: ubuntu-18.04
  #   needs: [featureB-test-ros]

  #   steps:
  #     - name: Check-out repository
  #       uses: actions/checkout@v2
  #       with:     
  #         ref: featureB     
  #         #fetch-depth: 2

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
        
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #     - name: Build and push                  
  #       uses: docker/build-push-action@v2        
  #       with:
  #         context: .
  #         file: ./Dockerfile/ros_featureB_deploy.Dockerfile
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ros1:feature_b_deploy
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new

